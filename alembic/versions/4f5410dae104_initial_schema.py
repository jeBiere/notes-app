"""initial schema

Revision ID: 4f5410dae104
Revises: 
Create Date: 2025-06-19 17:36:53.725047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f5410dae104'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный UUID пользователя'),
    sa.Column('email', sa.String(length=320), nullable=False, comment='Email пользователя, используется как логин'),
    sa.Column('username', sa.String(length=50), nullable=True, comment='Отображаемое имя пользователя'),
    sa.Column('hashed_password', sa.String(length=128), nullable=False, comment='Bcrypt-хэш пароля'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Аккаунт активен/заблокирован'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Когда аккаунт был создан'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Когда аккаунт последний раз обновлялся'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('notes',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный UUID заметки'),
    sa.Column('owner_id', sa.UUID(), nullable=False, comment='UUID владельца заметки'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='Заголовок заметки'),
    sa.Column('content', sa.Text(), nullable=False, comment='Текст заметки'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Когда заметка была создана'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Когда заметка была обновлена'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=True)
    op.create_index(op.f('ix_notes_owner_id'), 'notes', ['owner_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notes_owner_id'), table_name='notes')
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_table('notes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
